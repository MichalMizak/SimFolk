/*
 * This file is generated by jOOQ.
*/
package sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.tables.TVectorAlgorithmConfiguration;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VectorAlgorithmConfigurationRecord extends UpdatableRecordImpl<VectorAlgorithmConfigurationRecord> implements Record8<Long, String, Integer, String, String, String, String, String> {

    private static final long serialVersionUID = -366396785;

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.configurationId</code>.
     */
    public void setConfigurationid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.configurationId</code>.
     */
    public Long getConfigurationid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.termScheme</code>.
     */
    public void setTermscheme(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.termScheme</code>.
     */
    public String getTermscheme() {
        return (String) get(1);
    }

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.termDimension</code>.
     */
    public void setTermdimension(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.termDimension</code>.
     */
    public Integer getTermdimension() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.termWeightType</code>.
     */
    public void setTermweighttype(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.termWeightType</code>.
     */
    public String getTermweighttype() {
        return (String) get(3);
    }

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.vectorInclusion</code>.
     */
    public void setVectorinclusion(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.vectorInclusion</code>.
     */
    public String getVectorinclusion() {
        return (String) get(4);
    }

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.termComparisonAlgorithm</code>.
     */
    public void setTermcomparisonalgorithm(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.termComparisonAlgorithm</code>.
     */
    public String getTermcomparisonalgorithm() {
        return (String) get(5);
    }

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.tolerance</code>.
     */
    public void setTolerance(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.tolerance</code>.
     */
    public String getTolerance() {
        return (String) get(6);
    }

    /**
     * Setter for <code>simfolk.vector_algorithm_configuration.vectorComparisonAlgorithm</code>.
     */
    public void setVectorcomparisonalgorithm(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>simfolk.vector_algorithm_configuration.vectorComparisonAlgorithm</code>.
     */
    public String getVectorcomparisonalgorithm() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Integer, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Integer, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.CONFIGURATIONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.TERMSCHEME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.TERMDIMENSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.TERMWEIGHTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.VECTORINCLUSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.TERMCOMPARISONALGORITHM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.TOLERANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION.VECTORCOMPARISONALGORITHM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getConfigurationid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTermscheme();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getTermdimension();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTermweighttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getVectorinclusion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getTermcomparisonalgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getTolerance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getVectorcomparisonalgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getConfigurationid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTermscheme();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTermdimension();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTermweighttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getVectorinclusion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getTermcomparisonalgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTolerance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getVectorcomparisonalgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value1(Long value) {
        setConfigurationid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value2(String value) {
        setTermscheme(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value3(Integer value) {
        setTermdimension(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value4(String value) {
        setTermweighttype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value5(String value) {
        setVectorinclusion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value6(String value) {
        setTermcomparisonalgorithm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value7(String value) {
        setTolerance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord value8(String value) {
        setVectorcomparisonalgorithm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VectorAlgorithmConfigurationRecord values(Long value1, String value2, Integer value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VectorAlgorithmConfigurationRecord
     */
    public VectorAlgorithmConfigurationRecord() {
        super(TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION);
    }

    /**
     * Create a detached, initialised VectorAlgorithmConfigurationRecord
     */
    public VectorAlgorithmConfigurationRecord(Long configurationid, String termscheme, Integer termdimension, String termweighttype, String vectorinclusion, String termcomparisonalgorithm, String tolerance, String vectorcomparisonalgorithm) {
        super(TVectorAlgorithmConfiguration.T_VECTOR_ALGORITHM_CONFIGURATION);

        set(0, configurationid);
        set(1, termscheme);
        set(2, termdimension);
        set(3, termweighttype);
        set(4, vectorinclusion);
        set(5, termcomparisonalgorithm);
        set(6, tolerance);
        set(7, vectorcomparisonalgorithm);
    }
}
