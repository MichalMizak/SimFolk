/*
 * This file is generated by jOOQ.
*/
package sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.Indexes;
import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.Keys;
import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.Simfolk;
import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.tables.records.VectorAlgorithmConfigurationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TVectorAlgorithmConfiguration extends TableImpl<VectorAlgorithmConfigurationRecord> {

    private static final long serialVersionUID = -2024542875;

    /**
     * The reference instance of <code>simfolk.vector_algorithm_configuration</code>
     */
    public static final TVectorAlgorithmConfiguration T_VECTOR_ALGORITHM_CONFIGURATION = new TVectorAlgorithmConfiguration();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VectorAlgorithmConfigurationRecord> getRecordType() {
        return VectorAlgorithmConfigurationRecord.class;
    }

    /**
     * The column <code>simfolk.vector_algorithm_configuration.configurationId</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, Long> CONFIGURATIONID = createField("configurationId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>simfolk.vector_algorithm_configuration.termScheme</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, String> TERMSCHEME = createField("termScheme", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>simfolk.vector_algorithm_configuration.termDimension</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, Integer> TERMDIMENSION = createField("termDimension", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>simfolk.vector_algorithm_configuration.termWeightType</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, String> TERMWEIGHTTYPE = createField("termWeightType", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>simfolk.vector_algorithm_configuration.vectorInclusion</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, String> VECTORINCLUSION = createField("vectorInclusion", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>simfolk.vector_algorithm_configuration.termComparisonAlgorithm</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, String> TERMCOMPARISONALGORITHM = createField("termComparisonAlgorithm", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>simfolk.vector_algorithm_configuration.tolerance</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, String> TOLERANCE = createField("tolerance", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>simfolk.vector_algorithm_configuration.vectorComparisonAlgorithm</code>.
     */
    public final TableField<VectorAlgorithmConfigurationRecord, String> VECTORCOMPARISONALGORITHM = createField("vectorComparisonAlgorithm", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * Create a <code>simfolk.vector_algorithm_configuration</code> table reference
     */
    public TVectorAlgorithmConfiguration() {
        this(DSL.name("vector_algorithm_configuration"), null);
    }

    /**
     * Create an aliased <code>simfolk.vector_algorithm_configuration</code> table reference
     */
    public TVectorAlgorithmConfiguration(String alias) {
        this(DSL.name(alias), T_VECTOR_ALGORITHM_CONFIGURATION);
    }

    /**
     * Create an aliased <code>simfolk.vector_algorithm_configuration</code> table reference
     */
    public TVectorAlgorithmConfiguration(Name alias) {
        this(alias, T_VECTOR_ALGORITHM_CONFIGURATION);
    }

    private TVectorAlgorithmConfiguration(Name alias, Table<VectorAlgorithmConfigurationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TVectorAlgorithmConfiguration(Name alias, Table<VectorAlgorithmConfigurationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Simfolk.SIMFOLK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VECTOR_ALGORITHM_CONFIGURATION_PRIMARY, Indexes.VECTOR_ALGORITHM_CONFIGURATION_TERMSCHEME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VectorAlgorithmConfigurationRecord> getPrimaryKey() {
        return Keys.KEY_VECTOR_ALGORITHM_CONFIGURATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VectorAlgorithmConfigurationRecord>> getKeys() {
        return Arrays.<UniqueKey<VectorAlgorithmConfigurationRecord>>asList(Keys.KEY_VECTOR_ALGORITHM_CONFIGURATION_PRIMARY, Keys.KEY_VECTOR_ALGORITHM_CONFIGURATION_TERMSCHEME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TVectorAlgorithmConfiguration as(String alias) {
        return new TVectorAlgorithmConfiguration(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TVectorAlgorithmConfiguration as(Name alias) {
        return new TVectorAlgorithmConfiguration(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TVectorAlgorithmConfiguration rename(String name) {
        return new TVectorAlgorithmConfiguration(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TVectorAlgorithmConfiguration rename(Name name) {
        return new TVectorAlgorithmConfiguration(name, null);
    }
}
