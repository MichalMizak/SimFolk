/*
 * This file is generated by jOOQ.
*/
package sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Indexes;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Keys;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Simfolk;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.SongToAttributeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSongToAttribute extends TableImpl<SongToAttributeRecord> {

    private static final long serialVersionUID = -216790380;

    /**
     * The reference instance of <code>simfolk.song_to_attribute</code>
     */
    public static final TSongToAttribute T_SONG_TO_ATTRIBUTE = new TSongToAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SongToAttributeRecord> getRecordType() {
        return SongToAttributeRecord.class;
    }

    /**
     * The column <code>simfolk.song_to_attribute.songId</code>.
     */
    public final TableField<SongToAttributeRecord, Integer> SONGID = createField("songId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>simfolk.song_to_attribute.attribute</code>.
     */
    public final TableField<SongToAttributeRecord, String> ATTRIBUTE = createField("attribute", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * Create a <code>simfolk.song_to_attribute</code> table reference
     */
    public TSongToAttribute() {
        this(DSL.name("song_to_attribute"), null);
    }

    /**
     * Create an aliased <code>simfolk.song_to_attribute</code> table reference
     */
    public TSongToAttribute(String alias) {
        this(DSL.name(alias), T_SONG_TO_ATTRIBUTE);
    }

    /**
     * Create an aliased <code>simfolk.song_to_attribute</code> table reference
     */
    public TSongToAttribute(Name alias) {
        this(alias, T_SONG_TO_ATTRIBUTE);
    }

    private TSongToAttribute(Name alias, Table<SongToAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSongToAttribute(Name alias, Table<SongToAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Simfolk.SIMFOLK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SONG_TO_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SongToAttributeRecord> getPrimaryKey() {
        return Keys.KEY_SONG_TO_ATTRIBUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SongToAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<SongToAttributeRecord>>asList(Keys.KEY_SONG_TO_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SongToAttributeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SongToAttributeRecord, ?>>asList(Keys.SONG_TO_ATTRIBUTE_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSongToAttribute as(String alias) {
        return new TSongToAttribute(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSongToAttribute as(Name alias) {
        return new TSongToAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSongToAttribute rename(String name) {
        return new TSongToAttribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TSongToAttribute rename(Name name) {
        return new TSongToAttribute(name, null);
    }
}
