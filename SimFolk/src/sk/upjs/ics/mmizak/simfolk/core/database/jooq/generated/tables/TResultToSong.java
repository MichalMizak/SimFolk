/*
 * This file is generated by jOOQ.
*/
package sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.Indexes;
import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.Keys;
import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.Simfolk;
import sk.upjs.ics.mmizak.simfolk.core.database.jooq.generated.tables.records.ResultToSongRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TResultToSong extends TableImpl<ResultToSongRecord> {

    private static final long serialVersionUID = 1395343644;

    /**
     * The reference instance of <code>simfolk.result_to_song</code>
     */
    public static final TResultToSong T_RESULT_TO_SONG = new TResultToSong();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResultToSongRecord> getRecordType() {
        return ResultToSongRecord.class;
    }

    /**
     * The column <code>simfolk.result_to_song.songId</code>.
     */
    public final TableField<ResultToSongRecord, Long> SONGID = createField("songId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>simfolk.result_to_song.resultId</code>.
     */
    public final TableField<ResultToSongRecord, Long> RESULTID = createField("resultId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>simfolk.result_to_song.similarity</code>.
     */
    public final TableField<ResultToSongRecord, Double> SIMILARITY = createField("similarity", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * Create a <code>simfolk.result_to_song</code> table reference
     */
    public TResultToSong() {
        this(DSL.name("result_to_song"), null);
    }

    /**
     * Create an aliased <code>simfolk.result_to_song</code> table reference
     */
    public TResultToSong(String alias) {
        this(DSL.name(alias), T_RESULT_TO_SONG);
    }

    /**
     * Create an aliased <code>simfolk.result_to_song</code> table reference
     */
    public TResultToSong(Name alias) {
        this(alias, T_RESULT_TO_SONG);
    }

    private TResultToSong(Name alias, Table<ResultToSongRecord> aliased) {
        this(alias, aliased, null);
    }

    private TResultToSong(Name alias, Table<ResultToSongRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Simfolk.SIMFOLK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESULT_TO_SONG_RESULTID, Indexes.RESULT_TO_SONG_SONGID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResultToSongRecord>> getKeys() {
        return Arrays.<UniqueKey<ResultToSongRecord>>asList(Keys.KEY_RESULT_TO_SONG_SONGID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ResultToSongRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResultToSongRecord, ?>>asList(Keys.RESULT_TO_SONG_IBFK_1, Keys.RESULT_TO_SONG_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TResultToSong as(String alias) {
        return new TResultToSong(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TResultToSong as(Name alias) {
        return new TResultToSong(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TResultToSong rename(String name) {
        return new TResultToSong(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TResultToSong rename(Name name) {
        return new TResultToSong(name, null);
    }
}
