/*
 * This file is generated by jOOQ.
*/
package sk.upjs.ics.mmizak.simfolk.core.jooq.generated;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.TSong;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.TSongToAttribute;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.TTerm;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.TTermGroup;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.TTermGroupToTerm;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.TTermTokenized;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.TWeightedTermGroup;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.SongRecord;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.SongToAttributeRecord;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.TermGroupRecord;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.TermGroupToTermRecord;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.TermRecord;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.TermTokenizedRecord;
import sk.upjs.ics.mmizak.simfolk.core.jooq.generated.tables.records.WeightedTermGroupRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>simfolk</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<SongRecord, Integer> IDENTITY_T_SONG = Identities0.IDENTITY_T_SONG;
    public static final Identity<TermRecord, Integer> IDENTITY_T_TERM = Identities0.IDENTITY_T_TERM;
    public static final Identity<TermGroupRecord, Integer> IDENTITY_T_TERM_GROUP = Identities0.IDENTITY_T_TERM_GROUP;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<SongRecord> KEY_SONG_PRIMARY = UniqueKeys0.KEY_SONG_PRIMARY;
    public static final UniqueKey<SongToAttributeRecord> KEY_SONG_TO_ATTRIBUTE_PRIMARY = UniqueKeys0.KEY_SONG_TO_ATTRIBUTE_PRIMARY;
    public static final UniqueKey<TermRecord> KEY_TERM_PRIMARY = UniqueKeys0.KEY_TERM_PRIMARY;
    public static final UniqueKey<TermGroupRecord> KEY_TERM_GROUP_PRIMARY = UniqueKeys0.KEY_TERM_GROUP_PRIMARY;
    public static final UniqueKey<TermGroupToTermRecord> KEY_TERM_GROUP_TO_TERM_PRIMARY = UniqueKeys0.KEY_TERM_GROUP_TO_TERM_PRIMARY;
    public static final UniqueKey<TermTokenizedRecord> KEY_TERM_TOKENIZED_PRIMARY = UniqueKeys0.KEY_TERM_TOKENIZED_PRIMARY;
    public static final UniqueKey<WeightedTermGroupRecord> KEY_WEIGHTED_TERM_GROUP_PRIMARY = UniqueKeys0.KEY_WEIGHTED_TERM_GROUP_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<SongToAttributeRecord, SongRecord> SONG_TO_ATTRIBUTE_IBFK_1 = ForeignKeys0.SONG_TO_ATTRIBUTE_IBFK_1;
    public static final ForeignKey<TermGroupToTermRecord, TermGroupRecord> TERM_GROUP_TO_TERM_IBFK_1 = ForeignKeys0.TERM_GROUP_TO_TERM_IBFK_1;
    public static final ForeignKey<TermGroupToTermRecord, TermRecord> TERM_GROUP_TO_TERM_IBFK_2 = ForeignKeys0.TERM_GROUP_TO_TERM_IBFK_2;
    public static final ForeignKey<TermTokenizedRecord, TermRecord> TERM_TOKENIZED_IBFK_1 = ForeignKeys0.TERM_TOKENIZED_IBFK_1;
    public static final ForeignKey<WeightedTermGroupRecord, SongRecord> WEIGHTED_TERM_GROUP_IBFK_1 = ForeignKeys0.WEIGHTED_TERM_GROUP_IBFK_1;
    public static final ForeignKey<WeightedTermGroupRecord, TermGroupRecord> WEIGHTED_TERM_GROUP_IBFK_2 = ForeignKeys0.WEIGHTED_TERM_GROUP_IBFK_2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<SongRecord, Integer> IDENTITY_T_SONG = Internal.createIdentity(TSong.T_SONG, TSong.T_SONG.SONGID);
        public static Identity<TermRecord, Integer> IDENTITY_T_TERM = Internal.createIdentity(TTerm.T_TERM, TTerm.T_TERM.TERMID);
        public static Identity<TermGroupRecord, Integer> IDENTITY_T_TERM_GROUP = Internal.createIdentity(TTermGroup.T_TERM_GROUP, TTermGroup.T_TERM_GROUP.GROUPID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<SongRecord> KEY_SONG_PRIMARY = Internal.createUniqueKey(TSong.T_SONG, "KEY_song_PRIMARY", TSong.T_SONG.SONGID);
        public static final UniqueKey<SongToAttributeRecord> KEY_SONG_TO_ATTRIBUTE_PRIMARY = Internal.createUniqueKey(TSongToAttribute.T_SONG_TO_ATTRIBUTE, "KEY_song_to_attribute_PRIMARY", TSongToAttribute.T_SONG_TO_ATTRIBUTE.SONGID, TSongToAttribute.T_SONG_TO_ATTRIBUTE.ATTRIBUTE);
        public static final UniqueKey<TermRecord> KEY_TERM_PRIMARY = Internal.createUniqueKey(TTerm.T_TERM, "KEY_term_PRIMARY", TTerm.T_TERM.TERMID);
        public static final UniqueKey<TermGroupRecord> KEY_TERM_GROUP_PRIMARY = Internal.createUniqueKey(TTermGroup.T_TERM_GROUP, "KEY_term_group_PRIMARY", TTermGroup.T_TERM_GROUP.GROUPID, TTermGroup.T_TERM_GROUP.TERMCOMPARISONALGORITHM, TTermGroup.T_TERM_GROUP.TOLERANCE);
        public static final UniqueKey<TermGroupToTermRecord> KEY_TERM_GROUP_TO_TERM_PRIMARY = Internal.createUniqueKey(TTermGroupToTerm.T_TERM_GROUP_TO_TERM, "KEY_term_group_to_term_PRIMARY", TTermGroupToTerm.T_TERM_GROUP_TO_TERM.GROUPID, TTermGroupToTerm.T_TERM_GROUP_TO_TERM.TERMID);
        public static final UniqueKey<TermTokenizedRecord> KEY_TERM_TOKENIZED_PRIMARY = Internal.createUniqueKey(TTermTokenized.T_TERM_TOKENIZED, "KEY_term_tokenized_PRIMARY", TTermTokenized.T_TERM_TOKENIZED.TERMID, TTermTokenized.T_TERM_TOKENIZED.ORDERNUMBER);
        public static final UniqueKey<WeightedTermGroupRecord> KEY_WEIGHTED_TERM_GROUP_PRIMARY = Internal.createUniqueKey(TWeightedTermGroup.T_WEIGHTED_TERM_GROUP, "KEY_weighted_term_group_PRIMARY", TWeightedTermGroup.T_WEIGHTED_TERM_GROUP.SONGID, TWeightedTermGroup.T_WEIGHTED_TERM_GROUP.GROUPID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<SongToAttributeRecord, SongRecord> SONG_TO_ATTRIBUTE_IBFK_1 = Internal.createForeignKey(sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Keys.KEY_SONG_PRIMARY, TSongToAttribute.T_SONG_TO_ATTRIBUTE, "song_to_attribute_ibfk_1", TSongToAttribute.T_SONG_TO_ATTRIBUTE.SONGID);
        public static final ForeignKey<TermGroupToTermRecord, TermGroupRecord> TERM_GROUP_TO_TERM_IBFK_1 = Internal.createForeignKey(sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Keys.KEY_TERM_GROUP_PRIMARY, TTermGroupToTerm.T_TERM_GROUP_TO_TERM, "term_group_to_term_ibfk_1", TTermGroupToTerm.T_TERM_GROUP_TO_TERM.GROUPID);
        public static final ForeignKey<TermGroupToTermRecord, TermRecord> TERM_GROUP_TO_TERM_IBFK_2 = Internal.createForeignKey(sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Keys.KEY_TERM_PRIMARY, TTermGroupToTerm.T_TERM_GROUP_TO_TERM, "term_group_to_term_ibfk_2", TTermGroupToTerm.T_TERM_GROUP_TO_TERM.TERMID);
        public static final ForeignKey<TermTokenizedRecord, TermRecord> TERM_TOKENIZED_IBFK_1 = Internal.createForeignKey(sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Keys.KEY_TERM_PRIMARY, TTermTokenized.T_TERM_TOKENIZED, "term_tokenized_ibfk_1", TTermTokenized.T_TERM_TOKENIZED.TERMID);
        public static final ForeignKey<WeightedTermGroupRecord, SongRecord> WEIGHTED_TERM_GROUP_IBFK_1 = Internal.createForeignKey(sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Keys.KEY_SONG_PRIMARY, TWeightedTermGroup.T_WEIGHTED_TERM_GROUP, "weighted_term_group_ibfk_1", TWeightedTermGroup.T_WEIGHTED_TERM_GROUP.SONGID);
        public static final ForeignKey<WeightedTermGroupRecord, TermGroupRecord> WEIGHTED_TERM_GROUP_IBFK_2 = Internal.createForeignKey(sk.upjs.ics.mmizak.simfolk.core.jooq.generated.Keys.KEY_TERM_GROUP_PRIMARY, TWeightedTermGroup.T_WEIGHTED_TERM_GROUP, "weighted_term_group_ibfk_2", TWeightedTermGroup.T_WEIGHTED_TERM_GROUP.GROUPID);
    }
}
